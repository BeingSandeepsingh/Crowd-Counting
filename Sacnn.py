# -*- coding: utf-8 -*-
"""Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NpfuzLJ1EO-8HRsF_Rm98fAXgP6CE13v
"""
from keras.layers import Conv2D,Activation,MaxPool2D,Dense,Conv2DTranspose,Concatenate,Input,Flatten;
from keras.models import Sequential,Model
import keras
import numpy as np

def SACNN(weights=None,input_shape=(None,None,1)):
    #print("Number generated",np.random.normal(2, 3))
    img_input=Input(shape=input_shape)
    # Block 1
    x11 = Conv2D(64, (3, 3), activation='relu', padding='same', name='block1_conv1')(img_input)
    x12 = Conv2D(64, (3, 3), activation='relu', padding='same', name='block1_conv2')(x11)
    xp1 = MaxPool2D((2, 2), strides=(2, 2), name='block1_pool')(x12)
    #print("p1 = ",xp1.shape)   # 96,128
    # Block 2
    x21 = Conv2D(128, (3, 3), activation='relu', padding='same', name='block2_conv1')(xp1)
    x22 = Conv2D(128, (3, 3), activation='relu', padding='same', name='block2_conv2')(x21)
    xp2 = MaxPool2D((2, 2), strides=(2, 2), name='block2_pool')(x22)
    #print("p2 = ",xp2.shape)  # 48,64
    # Block 3
    x31 = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv1')(xp2)
    x32 = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv2')(x31)
    x33 = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv3')(x32)
    x34 = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv4')(x33)
    xp3 = MaxPool2D((2, 2), strides=(2, 2), name='block3_pool')(x34)
    #print("p3 = ",xp3.shape) # 24,32
    # Block 4
    x41 = Conv2D(512, (3, 3), activation='relu', padding='same', name='block4_conv1')(xp3)
    x42 = Conv2D(512, (3, 3), activation='relu', padding='same', name='block4_conv2')(x41)
    x43 = Conv2D(512, (3, 3), activation='relu', padding='same', name='block4_conv3')(x42)
    #print("x43 = ",x43.shape)  # 24,32
    #POOL4
    xp4=MaxPool2D(pool_size=(2, 2), strides=2)(x43)
    #print("p4 = ",xp4.shape) # 12,16

    #Block5
    x51=Conv2D(512,(3,3),activation='relu', padding='same', name='sacnn5_conv1')(xp4)
    x52=Conv2D(512,(3,3),activation='relu', padding='same', name='sacnn5_conv2')(x51)
    x53=Conv2D(512,(3,3),activation='relu', padding='same', name='sacnn5_conv3')(x52)
    #print("x53 = ",x53.shape)
    #POOL5
    xp5=MaxPool2D(pool_size=(3, 3), strides=1,padding='same')(x53)
    # 12,16
    #CONV6_1
    x61=Conv2D(512,(3,3),activation='relu', padding='same', name='sacnn6_conv1')(xp5)

    #MERGE 6_1 AND 5_3
    x6153=Concatenate(axis=3)([x53,x61])

    #DECONVOLUTION OR UPSAMPLE
    xd = Conv2DTranspose(512, (2,2), strides=(2, 2), activation='relu',padding='same', name='deconv1')(x6153)
    # 24,32
    #MERGE DECONV + 4_3
    xd43=Concatenate(axis=3)([xd,x43])
    xd43 = Conv2DTranspose(512, (2,2), strides=(2, 2), activation='relu',padding='same', name='deconv2')(xd43)
    # 48,64
    #BLOCK7
    x71=Conv2D(512,(3,3),activation='relu', padding='same', name='sacnn7_conv1')(xd43)
    x72=Conv2D(256,(3,3),activation='relu', padding='same', name='sacnn7_conv2')(x71)
    x73=Conv2D(1,(1,1),activation='relu', padding='same', name='sacnn7_conv3')(x72)

    sacnn=Model(inputs=img_input, outputs=x73)
    return sacnn
    #sacnn.summary()


    
